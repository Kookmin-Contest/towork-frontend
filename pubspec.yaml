name: gotowork
description: 오늘의 출근 프로젝트
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.0.5 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # ios 스타일 아이콘
  cupertino_icons: ^1.0.2
  # splash screen을 만들기 위한 패캐지
  flutter_native_splash: ^2.3.1
  # 자동로그인 및 토큰을 담아둘 local 저장소 패캐지
  flutter_secure_storage: ^8.0.0
  # Toast 메세지를 표시하기 위한 패캐지
  fluttertoast: ^8.0.8
  # 소셜 로그인 버튼 쉽게 만들기 (지울예정)
  flutter_signin_button: ^2.0.0
  # 달력 패캐지
  table_calendar: ^3.0.8
  # 다국어 처리 패캐지
  intl: ^0.17.0
  # 클라이언트 DB를 ORM으로 사용하기 위한 패캐지
  drift: ^2.3.0
  # Http 요청을 보내기 위한 패캐지 (http 패캐지 사용 x)
  dio: ^4.0.6
  # 소셜 로그인 웹 인증을 위한 패캐지
  flutter_web_auth: ^0.5.0
  # 클라이언트 고유 식별자 생성 패캐지
  uuid: ^3.0.4
  # 이건 뭐냐? 첨 보네. 넣은 사람 설명좀 써주셈
  google_fonts: ^5.1.0
  # url을 쉽게 열기 위한 패캐지
  url_launcher: ^6.1.12
  # state 관리를 용이하게 해주는 패캐지
  provider: ^6.0.5
  # 앱내에서 webview가 가능하게 해주는 패캐지
  webview_flutter: ^4.2.2
  # 네트워크 연결상태 체크 패캐지
  connectivity_plus: ^4.0.1
  # state 관리를 용이하게 해주는 패캐지
  get: ^4.6.5
  # 로딩화면 여러가지 이쁜거 추가해주는 패캐지
  flutter_spinkit: ^5.2.0
  # 기종에 따른 화면비율 조정해주는 패캐지
  flutter_screenutil: ^5.8.4
  # 갤러리에서 이미지 업로드 하기 위한 패키지
  image_picker: ^1.0.2
  # 이메일 보내기 패캐지
  flutter_email_sender: ^6.0.1
  # 생체인식 패캐지
  local_auth: ^2.1.6
  # 흐르는 글씨
  marquee: ^2.2.3

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
#  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: SUITE
      fonts:
        - asset: assets/font/SUITE/SUITE-Bold.ttf
          weight: 200
        - asset: assets/font/SUITE/SUITE-ExtraBold.ttf
          weight: 300
        - asset: assets/font/SUITE/SUITE-Heavy.ttf
          weight: 400
        - asset: assets/font/SUITE/SUITE-Light.ttf
          weight: 500
        - asset: assets/font/SUITE/SUITE-Medium.ttf
          weight: 600
        - asset: assets/font/SUITE/SUITE-Regular.ttf
          weight: 700
        - asset: assets/font/SUITE/SUITE-SemiBold.ttf
          weight: 900

    - family: NotoSansKr
      fonts:
        - asset: assets/font/NotoSansKr/NotoSansKr-Thin.otf
          weight: 100
        - asset: assets/font/NotoSansKr/NotoSansKr-Light.otf
          weight: 300
        - asset: assets/font/NotoSansKr/NotoSansKr-Regular.otf
          weight: 400
        - asset: assets/font/NotoSansKr/NotoSansKr-Medium.otf
          weight: 500
        - asset: assets/font/NotoSansKr/NotoSansKr-Bold.otf
          weight: 700
        - asset: assets/font/NotoSansKr/NotoSansKr-Black.otf
          weight: 900

    - family: Roboto
      fonts:
        - asset: assets/font/Roboto/Roboto-Thin.ttf
          weight: 100
        - asset: assets/font/Roboto/Roboto-Light.ttf
          weight: 300
        - asset: assets/font/Roboto/Roboto-Regular.ttf
          weight: 400
        - asset: assets/font/Roboto/Roboto-Medium.ttf
          weight: 500
        - asset: assets/font/Roboto/Roboto-Bold.ttf
          weight: 700
        - asset: assets/font/Roboto/Roboto-Black.ttf
          weight: 900
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
